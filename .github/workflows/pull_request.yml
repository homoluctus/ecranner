name: Test

on:
  pull_request:
    paths:
      - ecranner/*
      - tests/*
      - Dockerfile
      - Pipfile*

jobs:
  lint:
    name: Lint check
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python: [3.7]
    steps:
      - uses: actions/checkout@master

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          version: ${{ matrix.python }}
          architecture: 'x64'

      - name: Install dependencies
        run: |
          pip install --upgrade pip poetry
          poetry install

      - name: Lint check with flake8
        run: poetry run flake8 src tests

      - name: Notify Result to Slack
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          channel: '#develop'
          job_name: ':pencil: *Lint Check*'
          url: ${{ secrets.SLACK_WEBHOOK }}

  test:
    name: Pytest
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python: [3.7]
    steps:
      - uses: actions/checkout@v1

      - name: Setup Python3
        uses: actions/setup-python@v1
        with:
          version: ${{ matrix.python }}
          architecture: 'x64'

      - name: Install Dependencies
        run: |
          pip install -U pip poetry
          poetry install

      - name: Install Trivy
        env:
          TRIVY_VERSION: '0.1.6'
        run: |
          curl -L https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -o trivy.tar.gz
          tar xzvf trivy.tar.gz
          sudo mv trivy /usr/local/bin/trivy
          sudo chmod +x /usr/local/bin/trivy

      - name: Create dot env file for test
        run: |
          cat << EOF >> .env
          HELLO=WORLD
          THIS=IS_TEST
          EOF

      - name: Execute Test
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: poetry run pytest -q tests

      - name: Notify Result to Slack
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: ':white_flower: *Pytest*'
          channel: '#develop'
          url: ${{ secrets.SLACK_WEBHOOK }}